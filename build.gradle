buildscript {
    ext.kotlin_version = '1.3.71'
    ext.spring_boot_version = '2.1.0.RELEASE'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: "kotlin-allopen"
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenCentral()
}

dependencies {
    implementation(
            "org.springframework.boot:spring-boot-starter-web",
            "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version",
            "org.springframework.boot:spring-boot-starter-data-jpa",
            // postgressql
            "org.postgresql:postgresql:42.2.12",
            // hibernate
            "org.hibernate:hibernate-core:5.3.5.Final",
            "org.hibernate:hibernate-spatial:5.3.5.Final"
    )
    runtimeOnly(
            "org.jetbrains.kotlin:kotlin-reflect:1.3.71"
    )
    testCompileOnly('org.springframework.boot:spring-boot-starter-test')
    testImplementation(
            'org.assertj:assertj-core:3.12.2',
            'org.junit.jupiter:junit-jupiter-api:5.3.2',
            'org.junit.jupiter:junit-jupiter-params:5.3.2'
    )
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.3.2')
}

allOpen {
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.Embeddable")
    annotation("javax.persistence.MappedSuperclass")
}

test {
    useJUnitPlatform {
        includeTags 'unitTest'
    }
    testLogging {
        events("passed", "skipped", "failed")
    }
}